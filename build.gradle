/*
 *
 *  Copyright 2013 Netflix, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'findbugs'

archivesBaseName = 's3mper'
version = '1.0.0'
group = 'com.netflix.bdp'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets {
    test {
        java {
            srcDir 'test/java'
        }
    }
}

if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

buildscript {
    repositories {
        mavenCentral()
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:-deprecation"
} 

repositories {
    mavenCentral()
}

String classifier;
switch(System.getProperty("os.name").toLowerCase().split()[0]) {
    case 'linux':
        classifier = "linux-x86_64"
        break
    case 'mac':
        classifier = "osx-x86_64"
        break
    default:
        throw new Exception('Unknown OS')
}

dependencies {
    compile 'org.apache.hadoop:hadoop-common:2.7.1'
    compile 'log4j:log4j:1.2.17'
    compile 'com.amazonaws:aws-java-sdk:1.3.26'
    compile 'org.aspectj:aspectjtools:1.7.3'
    compile 'org.aspectj:aspectjweaver:1.7.3'
    compile 'org.aspectj:aspectjrt:1.7.3'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-math:2.2'
    compile 'commons-cli:commons-cli:1.2'
    compile 'args4j:args4j:2.0.25'
    compile 'com.google.cloud.bigdataoss:gcs-connector:1.4.5-hadoop2'
    compile 'com.google.cloud.bigtable:bigtable-hbase-1.1:0.3.0'
    compile 'org.apache.hbase:hbase-client:1.2.1'
    compile group: 'io.netty', name: 'netty-tcnative', version: '1.1.33.Fork13', classifier: classifier
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

findbugs {
    ignoreFailures = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task testJar(type: Jar, dependsOn: compileTestJava) {
    from sourceSets.test.output
    archiveName = 's3mper-test.jar'
}

task stage(type: Copy, dependsOn: [assemble]) {
    from configurations.runtime
    from 'build/libs'
    into "build/release/stage/s3mper-$version/lib"
    
    outputs.dir 'build/realease/stage'
}

task copyScripts(type: Copy) {
    from 'bin'
    from 'scripts'
    into "build/release/stage/s3mper-$version"
}

task copyDeps(type: Copy) {
    from configurations.runtime 
    includes = [ 'aspectjrt*', 'aspectjweaver*', '*hbase*' ]
    into tasks.jar.destinationDir
}
tasks.assemble.dependsOn(copyDeps)
tasks.test.dependsOn(copyDeps)

task release(type: Tar, dependsOn: [ stage, copyScripts ] ) {
    from 'build/release/stage'
    
    includes = ["s3mper-$version/*", "s3mper-$version/lib/*"]

    // Set destination directory.
    destinationDir = file("$buildDir/release")

    // Set filename properties.
    baseName = archivesBaseName
    version = version
    extension = 'tar.gz'

    compression = Compression.GZIP // or Compression.BZIP2
}

test {
    testLogging {
        showExceptions true
        showStackTraces true
        showStandardStreams true

        maxHeapSize "4G"

        exceptionFormat "full"
    }

    jvmArgs '-javaagent:build/libs/aspectjweaver-1.7.3.jar'
}
